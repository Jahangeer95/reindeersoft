@use "../../../../sass/colors";
@use "../../../../sass/font";
@use "../../../../sass/gradient";
@use "../../../../sass/paragraph";


.aside {
  display: grid;
  grid-template-columns: auto auto;
  align-content: center;
  column-gap: 100px;
  row-gap: 50px;

  @media only screen and (max-width: "1230px") {
    column-gap: 50px;
    width: 100%;
  }

  @media only screen and (max-width: "768px") {
    column-gap: 20px;
  }

  @media only screen and (max-width: "550px") {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 30px;
    width: 100%;
  }
}

.image {
  width: 320px;
  height: 220px;
  object-fit: cover;
  border-radius: 10px;
}

.anchorTag {

  position: relative;
  text-decoration: none;
  color: colors.$nav-menu-link-color;
  @include font.font(16px, 100%, 500);
  display: block;
  transition: all 0.3s ease-out;
  width: fit-content;
  height: fit-content;
  text-align: justify;
  text-justify: inter-word;

  &:last-child {
    @media only screen and (min-width: "768px") {
      grid-column: 1/span 2;
    }

  }

  @media screen and (min-width: "768px") {
    &::before {
      position: absolute;
      content: "";
      left: 0;
      top: 23px;
      width: 0%;
      border-bottom: 2px solid colors.$nav-menu-link-color-hover;
      transition: all 0.3s ease-out;
    }

    &::after {
      position: absolute;
      content: "";
      right: 0;
      top: 23px;
      width: 0%;
      border-bottom: 2px solid colors.$nav-menu-link-color-hover;
      transition: all 0.3s ease-out;
    }

    &:hover::before {
      width: 50%;
    }

    &:hover::after {
      width: 50%;
    }
  }

  &:hover {
    color: colors.$nav-menu-link-color-hover;

  }

}

.Hover_Menu_Main {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  width: 100%;
  max-width: 1100px;
  margin-top: 100px;
  margin-left: auto;
  margin-right: auto;
  padding: 50px;
  @include gradient.lightGradient1;
  box-shadow: 2px 4px 8px rgba(colors.$nav-menu-box-shadow-color, 0.22);

  @media only screen and (max-width: "768px") {
    padding: 30px;
  }

  div {

    .services {
      width: 100%;
      display: flex;
      flex-direction: row;
      justify-content: flex-start;
      align-items: center;
      min-height: 200px;
      gap: 50px;

      span {
        position: relative;
        width: 35%;

        @media only screen and (max-width: "991px") {
          display: none;
        }

        img {
          @extend .image;
        }
      }

      aside {
        @extend .aside;

        a {
          @extend .anchorTag;

        }
      }
    }

    .engagementModel {
      width: 100%;
      display: flex;
      flex-direction: row;
      justify-content: flex-start;
      align-items: center;
      min-height: 200px;
      gap: 50px;

      span {
        display: block;
        position: relative;

        &:first-child {
          width: 100%;

          img {
            @extend .image;
          }
        }

        &:nth-child(2) {
          width: 100%;

          p {
            @include paragraph.paragraph_mixin;
            color: colors.$primary_dark4;
            text-align: justify;
            font-size: 14px;

          }
        }



        @media only screen and (max-width:"991px") {
          display: none;
        }
      }

      aside {
        @extend .aside;
        grid-template-columns: auto;
        width: 100%;

        a {

          @extend .anchorTag;

          &:last-child {
            grid-column: auto;
          }
        }

      }
    }
  }

}

.Open {
  animation: opened 0.3s ease-out forwards;
  z-index: 100;
}

.Closed {
  animation: closed 0.3s ease-out forwards;
}

@keyframes opened {
  from {
    z-index: 5;
    opacity: 0;
    transform: translateY(-10%);
  }

  to {
    z-index: 5;
    opacity: 1;
    transform: translateY(0%);
  }
}

@keyframes closed {
  from {
    z-index: 100;
    opacity: 1;
    transform: translateY(0);
  }

  to {
    z-index: 10;
    opacity: 0;
    transform: translateY(-10%);
  }
}